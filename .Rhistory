rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
#get functions
setwd('U:\\GIT_models\\git_LDA_MS')
source('gibbs functions.R')
sourceCpp('aux1.cpp')
#get data
setwd('U:\\independent studies\\LDA_MS\\fake data')
dat=read.csv('fake data 5.csv',as.is=T)
xmat=matrix(1,nrow(dat),1)
#useful stuff
ind=which(colnames(dat)=='loc.id')
dat1=data.matrix(dat[,-ind])
minus.dat1=1-dat1
image(data.matrix(dat1))
loc.id=dat$loc.id
nloc=max(loc.id)
nspp=ncol(dat1)
ncomm=10
nlinhas=nrow(dat1)
hi=0.999999
lo=0.000001
#initial values for parameters
vmat=matrix(pnorm(0),nloc,ncomm)
head(vmat)
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
#get functions
setwd('U:\\GIT_models\\git_LDA_MS')
source('gibbs functions.R')
sourceCpp('aux1.cpp')
#get data
setwd('U:\\independent studies\\LDA_MS\\fake data')
dat=read.csv('fake data 5.csv',as.is=T)
xmat=matrix(1,nrow(dat),1)
#useful stuff
ind=which(colnames(dat)=='loc.id')
dat1=data.matrix(dat[,-ind])
minus.dat1=1-dat1
image(data.matrix(dat1))
loc.id=dat$loc.id
nloc=max(loc.id)
nspp=ncol(dat1)
ncomm=10
nlinhas=nrow(dat1)
hi=0.999999
lo=0.000001
#initial values for parameters
vmat=matrix(pnorm(0),nloc,ncomm)
vmat[,ncomm]=1
prod=rep(1,nloc)
theta=convertVtoTheta(vmat,prod)
head(theta)
apply(theta,1,sum)
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
#get functions
setwd('U:\\GIT_models\\git_LDA_MS')
source('gibbs functions.R')
sourceCpp('aux1.cpp')
#get data
setwd('U:\\independent studies\\LDA_MS\\fake data')
dat=read.csv('fake data 5.csv',as.is=T)
xmat=matrix(1,nrow(dat),1)
#useful stuff
ind=which(colnames(dat)=='loc.id')
dat1=data.matrix(dat[,-ind])
minus.dat1=1-dat1
image(data.matrix(dat1))
loc.id=dat$loc.id
nloc=max(loc.id)
nspp=ncol(dat1)
ncomm=10
nlinhas=nrow(dat1)
hi=0.999999
lo=0.000001
#initial values for parameters
vmat=matrix(pnorm(0),nloc,ncomm)
vmat[,ncomm]=1
prod=rep(1,nloc)
theta=convertVtoTheta(vmat,prod)
b0k=rep(0,ncomm)
phi=matrix(0.5,ncomm,nspp)
z=matrix(sample(1:ncomm,size=nlinhas*nspp,replace=T),nlinhas,nspp)
#priors
a.phi=1
b.phi=1
#gibbs details
ngibbs=1000
theta.out=matrix(NA,ngibbs,ncomm*nloc)
phi.out=matrix(NA,ngibbs,ncomm*nspp)
b0.out=matrix(NA,ngibbs,ncomm)
llk=rep(NA,ngibbs)
options(warn=2)
rand.u=matrix(runif(nlinhas*nspp),nlinhas,nspp)
z=samplez(ltheta=log(theta), l1minustheta=log(1-phi), lphi=log(phi),
dat1=dat1, minus_dat1=minus.dat1,
locid=loc.id,randu=rand.u, ncommun=ncomm, nloc=nloc)
table(z)
dim(z)
ind=which(colnames(dat)=='loc.id')
dat1=data.matrix(dat[,-ind])
minus.dat1=1-dat1
image(data.matrix(dat1))
loc.id=dat$loc.id
nloc=max(loc.id)
xmat.loc=matrix(1,nloc,1)
nspp=ncol(dat1)
ncomm=10
nlinhas=nrow(dat1)
hi=0.999999
lo=0.000001
#initial values for parameters
vmat=matrix(pnorm(0),nloc,ncomm)
vmat[,ncomm]=1
prod=rep(1,nloc)
theta=convertVtoTheta(vmat,prod)
betas=matrix(0,ncomm-1,ncol(xmat))
phi=matrix(0.5,ncomm,nspp)
z=matrix(sample(1:ncomm,size=nlinhas*nspp,replace=T),nlinhas,nspp)
i=1
cond.eq=z==i
cond.lq=z<i
media=xmat%*%betas[i,]
tmp=rep(NA,nspp*nrow(dat1))
dim(media)
betas
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
#get functions
setwd('U:\\GIT_models\\git_LDA_MS')
source('gibbs functions.R')
sourceCpp('aux1.cpp')
#get data
setwd('U:\\independent studies\\LDA_MS\\fake data')
dat=read.csv('fake data 5.csv',as.is=T)
#useful stuff
ind=which(colnames(dat)=='loc.id')
dat1=data.matrix(dat[,-ind])
minus.dat1=1-dat1
image(data.matrix(dat1))
loc.id=dat$loc.id
nloc=max(loc.id)
nspp=ncol(dat1)
ncomm=10
nlinhas=nrow(dat1)
hi=0.999999
lo=0.000001
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
#get functions
setwd('U:\\GIT_models\\git_LDA_MS')
source('gibbs functions.R')
sourceCpp('aux1.cpp')
#get data
setwd('U:\\independent studies\\LDA_MS\\fake data')
dat=read.csv('fake data 5.csv',as.is=T)
#useful stuff
ind=which(colnames(dat)=='loc.id')
dat1=data.matrix(dat[,-ind])
minus.dat1=1-dat1
image(data.matrix(dat1))
loc.id=dat$loc.id
nloc=max(loc.id)
nspp=ncol(dat1)
ncomm=10
nlinhas=nrow(dat1)
hi=0.999999
lo=0.000001
#initial values for parameters
vmat=matrix(pnorm(0),nloc,ncomm)
vmat[,ncomm]=1
prod=rep(1,nloc)
theta=convertVtoTheta(vmat,prod)
betas=matrix(0,ncomm-1,1)
phi=matrix(0.5,ncomm,nspp)
z=matrix(sample(1:ncomm,size=nlinhas*nspp,replace=T),nlinhas,nspp)
#priors
a.phi=1
b.phi=1
#gibbs details
ngibbs=1000
theta.out=matrix(NA,ngibbs,ncomm*nloc)
phi.out=matrix(NA,ngibbs,ncomm*nspp)
betas.out=matrix(NA,ngibbs,ncomm-1)
llk=rep(NA,ngibbs)
options(warn=2)
rand.u=matrix(runif(nlinhas*nspp),nlinhas,nspp)
z=samplez(ltheta=log(theta), l1minustheta=log(1-phi), lphi=log(phi),
dat1=dat1, minus_dat1=minus.dat1,
locid=loc.id,randu=rand.u, ncommun=ncomm, nloc=nloc)
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
#get functions
setwd('U:\\GIT_models\\git_LDA_MS')
source('gibbs functions.R')
sourceCpp('aux1.cpp')
#get data
setwd('U:\\independent studies\\LDA_MS\\fake data')
dat=read.csv('fake data 5.csv',as.is=T)
#useful stuff
ind=which(colnames(dat)=='loc.id')
dat1=data.matrix(dat[,-ind])
minus.dat1=1-dat1
image(data.matrix(dat1))
loc.id=dat$loc.id
nloc=max(loc.id)
nspp=ncol(dat1)
ncomm=10
nlinhas=nrow(dat1)
hi=0.999999
lo=0.000001
#initial values for parameters
vmat=matrix(pnorm(0),nloc,ncomm)
vmat[,ncomm]=1
prod=rep(1,nloc)
theta=convertVtoTheta(vmat,prod)
betas=matrix(0,ncomm-1,1)
phi=matrix(0.5,ncomm,nspp)
z=matrix(sample(1:ncomm,size=nlinhas*nspp,replace=T),nlinhas,nspp)
#priors
a.phi=1
b.phi=1
#gibbs details
ngibbs=1000
theta.out=matrix(NA,ngibbs,ncomm*nloc)
phi.out=matrix(NA,ngibbs,ncomm*nspp)
betas.out=matrix(NA,ngibbs,ncomm-1)
llk=rep(NA,ngibbs)
options(warn=2)
i=1
rand.u=matrix(runif(nlinhas*nspp),nlinhas,nspp)
z=samplez(ltheta=log(theta), l1minustheta=log(1-phi), lphi=log(phi),
dat1=dat1, minus_dat1=minus.dat1,
locid=loc.id,randu=rand.u, ncommun=ncomm, nloc=nloc)
#sample omega and beta
tmp=sample.omega.beta(nspp=nspp,nlinhas=nlinhas,ncomm=ncomm,betas=betas,z=z)
tmp
n=nspp*nlinhas
betas.new=rep(NA,ncomm-1)
i=1
cond.eq=z==i
cond.lq=z<i
omega=rep(NA,n)
omega[cond.eq]=tnorm(sum(cond.eq),lo=0,hi=Inf ,mu=betas[i,1],sig=1)
omega[cond.lq]=tnorm(sum(cond.lq),lo=-Inf,hi=0,mu=betas[i,1],sig=1)
omega1=omega[cond.eq | cond.lq]
omega1
prec=1+length(omega1)
var1=1/prec
soma=sum(omega1)
var1*soma
setwd('U:\\GIT_models\\git_LDA_MS')
source('gibbs functions.R')
sample.omega.beta(nspp=nspp,nlinhas=nlinhas,ncomm=ncomm,betas=betas,z=z)
tmp=getks(z=z, ncommun=ncomm, dat=dat1)
nks1=tmp$nks1
nks0=tmp$nks0
matrix(rbeta(nspp*ncomm,nks1+a.phi,nks0+b.phi),ncomm,nspp) #phi.true#
