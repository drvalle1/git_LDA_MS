rm(list=ls(all=TRUE))
library(MCMCpack)
library('Rcpp')
library('RcppArmadillo')
set.seed(10)
#get data
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\derived data')
dat=read.csv('g10 aggregated.csv',as.is=T)
ind=which(colnames(dat)%in%c('x','y','ano'))
y=data.matrix(dat[,-ind])
nloc=nrow(y)
nspp=ncol(y)
xmat=data.matrix(read.csv('g10 aggregated xmat1.csv',as.is=T))
xmat=cbind(1,xmat) #ADD INTERCEPT
#get array.lsk
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\results')
tmp=read.csv('array lsk.csv',as.is=T)
ncomm=3 #this was estimated based on a previous step
array.lsk=array(tmp$V1,dim=c(nloc,nspp,ncomm))
#basic settings
ngibbs=10000
nburn=ngibbs/2
#priors
phi.prior=0.01
var.betas=1
gamma=0.1
#----------------------------------------------------------
#LDA with covariates
#get functions
setwd('U:\\GIT_models\\git_LDA_MS')
source('LDA cov main function.R')
source('LDA cov aux functions.R')
sourceCpp('LDA_cov_aux1_cpp.cpp')
res=gibbs.LDA.cov(ncomm=ncomm,ngibbs=ngibbs,nburn=nburn,y=y,xmat=xmat,
phi.prior=phi.prior,array.lsk.init=array.lsk,
var.betas=var.betas)
plot(res$llk,type='l')
#explore results
nlk=matrix(res$nlk[ngibbs,],nloc,ncomm)
theta=nlk/apply(nlk,1,sum)
boxplot(theta)
nlk.init=apply(array.lsk,c(1,3),sum)
theta.init=nlk.init/apply(nlk.init,1,sum)
boxplot(theta.init)
str(res)
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\results')
seq1=(ngibbs/2):ngibbs
itens=c('llk','phi','nlk','betas')
nomes=paste0(itens,'.csv')
for (i in 1:length(itens)){
write.csv(res[[itens[i]]],nomes[i],row.names=F)
}
rm(list=ls(all=TRUE))
library(RColorBrewer)
library(grDevices)
colfunc<-colorRampPalette(c("black","blue","red"),alpha=T)
cores=col2rgb(colfunc(3))/255
cores.trans=rgb(red=cores['red',],green=cores['green',],blue=cores['blue',],alpha=0.3)
cores.solid=rgb(red=cores['red',],green=cores['green',],blue=cores['blue',],alpha=1)
#get names covariates
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\derived data')
xmat=read.csv('g10 aggregated xmat1.csv',as.is=T)
nomes=c('intercept',colnames(xmat))
nparam=ncol(xmat)+1
ncomm=3
#get actual edge distance measures
tmp=read.csv('g10 aggregated xmat.csv',as.is=T)
merge.edge=data.frame(d.edge=sort(unique(xmat$d.edge)),d.edge1=sort(unique(tmp$d.edge)))
#look at convergence
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\results')
llk=read.csv('llk.csv',as.is=T)
plot(llk$x,type='l')
seq1=1000:nrow(llk)
plot(llk$x[seq1],type='l')
#get slope coefficients
betas=read.csv('betas.csv',as.is=T)
tmp=apply(betas[seq1,],2,mean)
betas1=matrix(tmp,nparam,ncomm)
tmp=apply(betas[seq1,],2,quantile,c(0.025,0.975))
lo=matrix(tmp[1,],nparam,ncomm)
hi=matrix(tmp[2,],nparam,ncomm)
ns.cond=lo < 0 & hi > 0
rownames(betas1)=rownames(ns.cond)=nomes
colnames(betas1)=colnames(ns.cond)=paste0('comm',1:ncomm)
ns.cond
#make graph for year x fire interaction
z=unique(xmat[,c('d.edge','fire.lo.freq','fire.hi.freq','edge.fire.lo','edge.fire.hi')])
xmat.pred=xmat[1:nrow(z),]
xmat.pred[]=0
xmat.pred[,colnames(z)]=z
xmat.pred$plot.b3yr=1 #make predictions for this plot
xmat.pred1=data.matrix(cbind(1,xmat.pred))
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\derived')
aux=matrix(1:(nparam*ncomm),nparam,ncomm)
png('interaction edge figures.png',width=700,height=1000)
par(mfrow=c(3,1),oma=c(2,3,2,1),mar=c(3,3,3,1))
for (i in 1:ncomm){
media=exp(xmat.pred1%*%t(betas[seq1,aux[,i]]))
quant1=apply(media,1,quantile,c(0.025,0.5,0.975))
rownames(quant1)=c('lo','med','hi')
res0=cbind(z,t(quant1)); dim(res0)
res=merge(res0,merge.edge,all=T); dim(res0); dim(res)
res$d.edge=res$d.edge1
plot(NA,NA,xlim=range(res$d.edge),ylim=range(quant1),main=paste('Community',i),
cex.main=2,cex.axis=1.5,xlab='',ylab='')
#results no fire
cond=res$fire.lo.freq==0 & res$fire.hi.freq==0
res1=res[cond,]
tmp=res1$d.edge
seq2=length(tmp):1
x=c(tmp,tmp[seq2])
y=c(res1$lo,res1$hi[seq2])
polygon(x,y,col=cores.trans[1],border=NA)
lines(med~d.edge,data=res1,col=cores.solid[1])
points(med~d.edge,data=res1,col=cores.solid[1])
#results lo fire
cond=res$fire.lo.freq==1 & res$fire.hi.freq==0
res1=res[cond,]
tmp=res1$d.edge
seq2=length(tmp):1
x=c(tmp,tmp[seq2])
y=c(res1$lo,res1$hi[seq2])
polygon(x,y,col=cores.trans[2],border=NA)
lines(med~d.edge,data=res1,col=cores.solid[2])
points(med~d.edge,data=res1,col=cores.solid[2])
#results hi fire
cond=(res$fire.lo.freq==0 & res$fire.hi.freq==1)
res1=res[cond,]
tmp=res1$d.edge
seq2=length(tmp):1
x=c(tmp,tmp[seq2])
y=c(res1$lo,res1$hi[seq2])
polygon(x,y,col=cores.trans[3],border=NA)
lines(med~d.edge,data=res1,col=cores.solid[3])
points(med~d.edge,data=res1,col=cores.solid[3])
}
mtext(side=1,at=0.5,outer=T,line=1,'Distance to edge',cex=2)
mtext(side=2,at=0.5,outer=T,line=1,'Number of trees',cex=2)
dev.off()
rm(list=ls(all=TRUE))
library(RColorBrewer)
library(grDevices)
colfunc<-colorRampPalette(c("black","blue","red"),alpha=T)
cores=col2rgb(colfunc(3))/255
cores.trans=rgb(red=cores['red',],green=cores['green',],blue=cores['blue',],alpha=0.3)
cores.solid=rgb(red=cores['red',],green=cores['green',],blue=cores['blue',],alpha=1)
#get names covariates
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\derived data')
xmat=read.csv('g10 aggregated xmat1.csv',as.is=T)
nomes=c('intercept',colnames(xmat))
nparam=ncol(xmat)+1
ncomm=3
#get calendar years
tmp=read.csv('g10 aggregated xmat.csv',as.is=T)
merge.yrs=data.frame(year=unique(xmat$year),year1=unique(tmp$year))
#look at convergence
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\results')
llk=read.csv('llk.csv',as.is=T)
plot(llk$x,type='l')
seq1=1000:nrow(llk)
plot(llk$x[seq1],type='l')
#get slope coefficients
betas=read.csv('betas.csv',as.is=T)
tmp=apply(betas[seq1,],2,mean)
betas1=matrix(tmp,nparam,ncomm)
tmp=apply(betas[seq1,],2,quantile,c(0.025,0.975))
lo=matrix(tmp[1,],nparam,ncomm)
hi=matrix(tmp[2,],nparam,ncomm)
ns.cond=lo < 0 & hi > 0
rownames(betas1)=rownames(ns.cond)=nomes
colnames(betas1)=colnames(ns.cond)=paste0('comm',1:ncomm)
ns.cond
#make graph for year x fire interaction
z=unique(xmat[,c('year','fire.lo.freq','fire.hi.freq','yr.fire.lo','yr.fire.hi')])
xmat.pred=xmat[1:nrow(z),]
xmat.pred[]=0
xmat.pred[,colnames(z)]=z
xmat.pred$plot.b3yr=1 #make predictions for this plot
xmat.pred1=data.matrix(cbind(1,xmat.pred))
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\derived')
aux=matrix(1:(nparam*ncomm),nparam,ncomm)
png('interaction year figures.png',width=700,height=1000)
par(mfrow=c(3,1),oma=c(2,3,2,1),mar=c(3,3,3,1))
for (i in 1:ncomm){
media=exp(xmat.pred1%*%t(betas[seq1,aux[,i]]))
quant1=apply(media,1,quantile,c(0.025,0.5,0.975))
rownames(quant1)=c('lo','med','hi')
res0=cbind(z,t(quant1)); dim(res0)
res=merge(res0,merge.yrs,all=T); dim(res0); dim(res)
res$year=res$year1
plot(NA,NA,xlim=range(res$year),ylim=range(quant1),main=paste('Community',i),
cex.main=2,cex.axis=1.5,xlab='',ylab='')
#results no fire
cond=res$fire.lo.freq==0 & res$fire.hi.freq==0
res1=res[cond,]
tmp=res1$year
seq2=length(tmp):1
x=c(tmp,tmp[seq2])
y=c(res1$lo,res1$hi[seq2])
polygon(x,y,col=cores.trans[1],border=NA)
lines(med~year,data=res1,col=cores.solid[1])
points(med~year,data=res1,col=cores.solid[1])
#results lo fire
cond=(res$fire.lo.freq==1 & res$fire.hi.freq==0) | (res$year == 2004)
res1=res[cond,]
tmp=res1$year
seq2=length(tmp):1
x=c(tmp,tmp[seq2])
y=c(res1$lo,res1$hi[seq2])
polygon(x,y,col=cores.trans[2],border=NA)
lines(med~year,data=res1,col=cores.solid[2])
points(med~year,data=res1,col=cores.solid[2])
#results hi fire
cond=(res$fire.lo.freq==0 & res$fire.hi.freq==1) | (res$year == 2004)
res1=res[cond,]
tmp=res1$year
rm(list=ls(all=TRUE))
library(RColorBrewer)
library(grDevices)
colfunc<-colorRampPalette(c("black","blue","red"),alpha=T)
cores=col2rgb(colfunc(3))/255
cores.trans=rgb(red=cores['red',],green=cores['green',],blue=cores['blue',],alpha=0.3)
cores.solid=rgb(red=cores['red',],green=cores['green',],blue=cores['blue',],alpha=1)
#get names covariates
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\derived data')
xmat=read.csv('g10 aggregated xmat1.csv',as.is=T)
nomes=c('intercept',colnames(xmat))
nparam=ncol(xmat)+1
ncomm=3
#get calendar years
tmp=read.csv('g10 aggregated xmat.csv',as.is=T)
merge.yrs=data.frame(year=unique(xmat$year),year1=unique(tmp$year))
#look at convergence
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\results')
llk=read.csv('llk.csv',as.is=T)
plot(llk$x,type='l')
seq1=1000:nrow(llk)
plot(llk$x[seq1],type='l')
#get slope coefficients
betas=read.csv('betas.csv',as.is=T)
tmp=apply(betas[seq1,],2,mean)
betas1=matrix(tmp,nparam,ncomm)
tmp=apply(betas[seq1,],2,quantile,c(0.025,0.975))
lo=matrix(tmp[1,],nparam,ncomm)
hi=matrix(tmp[2,],nparam,ncomm)
ns.cond=lo < 0 & hi > 0
rownames(betas1)=rownames(ns.cond)=nomes
colnames(betas1)=colnames(ns.cond)=paste0('comm',1:ncomm)
ns.cond
#make graph for year x fire interaction
z=unique(xmat[,c('year','fire.lo.freq','fire.hi.freq','yr.fire.lo','yr.fire.hi')])
xmat.pred=xmat[1:nrow(z),]
xmat.pred[]=0
xmat.pred[,colnames(z)]=z
xmat.pred$plot.b3yr=1 #make predictions for this plot
xmat.pred1=data.matrix(cbind(1,xmat.pred))
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\derived')
aux=matrix(1:(nparam*ncomm),nparam,ncomm)
png('interaction year figures.png',width=700,height=1000)
par(mfrow=c(3,1),oma=c(2,3,2,1),mar=c(3,3,3,1))
for (i in 1:ncomm){
media=exp(xmat.pred1%*%t(betas[seq1,aux[,i]]))
quant1=apply(media,1,quantile,c(0.025,0.5,0.975))
rownames(quant1)=c('lo','med','hi')
res0=cbind(z,t(quant1)); dim(res0)
res=merge(res0,merge.yrs,all=T); dim(res0); dim(res)
res$year=res$year1
plot(NA,NA,xlim=range(res$year),ylim=range(quant1),main=paste('Community',i),
cex.main=2,cex.axis=1.5,xlab='',ylab='')
#results no fire
cond=res$fire.lo.freq==0 & res$fire.hi.freq==0
res1=res[cond,]
tmp=res1$year
seq2=length(tmp):1
x=c(tmp,tmp[seq2])
y=c(res1$lo,res1$hi[seq2])
polygon(x,y,col=cores.trans[1],border=NA)
lines(med~year,data=res1,col=cores.solid[1])
points(med~year,data=res1,col=cores.solid[1])
#results lo fire
cond=(res$fire.lo.freq==1 & res$fire.hi.freq==0) | (res$year == 2004)
res1=res[cond,]
tmp=res1$year
seq2=length(tmp):1
x=c(tmp,tmp[seq2])
y=c(res1$lo,res1$hi[seq2])
polygon(x,y,col=cores.trans[2],border=NA)
lines(med~year,data=res1,col=cores.solid[2])
points(med~year,data=res1,col=cores.solid[2])
#results hi fire
cond=(res$fire.lo.freq==0 & res$fire.hi.freq==1) | (res$year == 2004)
res1=res[cond,]
tmp=res1$year
seq2=length(tmp):1
x=c(tmp,tmp[seq2])
y=c(res1$lo,res1$hi[seq2])
polygon(x,y,col=cores.trans[3],border=NA)
lines(med~year,data=res1,col=cores.solid[3])
points(med~year,data=res1,col=cores.solid[3])
}
mtext(side=1,at=0.5,outer=T,line=1,'Time',cex=2)
mtext(side=2,at=0.5,outer=T,line=1,'Number of trees',cex=2)
dev.off()
rm(list=ls(all=TRUE))
#get names covariates
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\derived data')
xmat=read.csv('g10 aggregated xmat1.csv',as.is=T)
nomes=c('intercept',colnames(xmat))
nparam=ncol(xmat)+1
ncomm=3
#look at convergence
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\results')
llk=read.csv('llk.csv',as.is=T)
plot(llk$x,type='l')
seq1=1000:nrow(llk)
plot(llk$x[seq1],type='l')
#get slope coefficients
betas=read.csv('betas.csv',as.is=T)
tmp=apply(betas[seq1,],2,mean)
betas1=matrix(tmp,nparam,ncomm)
tmp=apply(betas[seq1,],2,quantile,c(0.025,0.975))
lo=matrix(tmp[1,],nparam,ncomm)
hi=matrix(tmp[2,],nparam,ncomm)
ns.cond=lo < 0 & hi > 0
rownames(betas1)=rownames(ns.cond)=nomes
colnames(betas1)=colnames(ns.cond)=paste0('comm',1:ncomm)
ns.cond
betas1
res=numeric()
for (i in 1:ncomm){
tmp=cbind(betas1[,i],lo[,i],hi[,i],i)
res=rbind(res)
}
res
res=numeric()
for (i in 1:ncomm){
tmp=cbind(betas1[,i],lo[,i],hi[,i],i)
res=rbind(res,tmp)
}
res
res=numeric()
for (i in 1:ncomm){
tmp=cbind(betas1[,i],lo[,i],hi[,i],i)
res=rbind(res,tmp)
}
nomes=c('mean','2.5%','97.5%','Community')
colnames(res)=nomes
res[,nomes[1:3]]=round(res[,nomes[1:3]],2)
res
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\derived results')
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\derived')
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\derived')
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\derived')
write.csv(res,'parameters.csv')
rownames(betas1)
rownames(betas1)
nomes=c('Intercept','Plot (every 3 years)','Plot (every year)',
'Distance to edge','Fire (every 3 years)','Fire (every year)','Year',
'Interaction: Year x Fire (every 3 years)',
'Interaction: Year x Fire (every year)',
'Interaction: Edge x Fire (every 3 years)',
'Interaction: Edge x Fire (every year)')
cbind(rownames(betas1),nomes)
rownames(betas1)
nomes=c('Intercept','Plot (every 3 years)','Plot (every year)',
'Distance to edge','Fire (every 3 years)','Fire (every year)','Year',
'Interaction: Year x Fire (every 3 years)',
'Interaction: Year x Fire (every year)',
'Interaction: Edge x Fire (every 3 years)',
'Interaction: Edge x Fire (every year)')
cbind(rownames(betas1),nomes)
#summarize these results
res=numeric()
for (i in 1:ncomm){
tmp=cbind(betas1[,i],lo[,i],hi[,i],i,nomes)
res=rbind(res,tmp)
}
nomes=c('mean','2.5%','97.5%','Community','variable')
colnames(res)=nomes
res[,nomes[1:3]]=round(res[,nomes[1:3]],2)
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\derived')
write.csv(res,'parameters.csv',row.names=F)
rownames(betas1)
nomes=c('Intercept','Plot (every 3 years)','Plot (every year)',
'Distance to edge','Fire (every 3 years)','Fire (every year)','Year',
'Interaction: Year x Fire (every 3 years)',
'Interaction: Year x Fire (every year)',
'Interaction: Edge x Fire (every 3 years)',
'Interaction: Edge x Fire (every year)')
cbind(rownames(betas1),nomes)
#summarize these results
res=numeric()
for (i in 1:ncomm){
tmp=cbind(betas1[,i],lo[,i],hi[,i],i,nomes)
res=rbind(res,tmp)
}
nomes=c('mean','2.5%','97.5%','Community','variable')
colnames(res)=nomes
nomes
res[,nomes[1:3]]=round(res[,nomes[1:3]],2)
res[,nomes[1:3]]
nomes=c('mean','2.5%','97.5%','Community','variable')
colnames(res)=nomes
res[,nomes[1:3]]=round(as.numeric(res[,nomes[1:3]]),2)
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\derived')
write.csv(res,'parameters.csv',row.names=F)
rm(list=ls(all=TRUE))
library(MCMCpack)
library('Rcpp')
library('RcppArmadillo')
set.seed(10)
#get data
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\derived data')
dat=read.csv('g10 aggregated.csv',as.is=T)
ind=which(colnames(dat)%in%c('x','y','ano'))
y=data.matrix(dat[,-ind])
nloc=nrow(y)
nspp=ncol(y)
xmat=data.matrix(read.csv('g10 aggregated xmat1.csv',as.is=T))
xmat=cbind(1,xmat) #ADD INTERCEPT
#get array.lsk
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\results')
tmp=read.csv('array lsk.csv',as.is=T)
ncomm=3 #this was estimated based on a previous step
array.lsk=array(tmp$V1,dim=c(nloc,nspp,ncomm))
#basic settings
ngibbs=10000
nburn=ngibbs/2
#priors
phi.prior=0.01
var.betas=c(10,rep(0.1,ncol(xmat)-1))
gamma=0.1
setwd('U:\\GIT_models\\git_LDA_MS')
source('LDA cov main function.R')
source('LDA cov aux functions.R')
sourceCpp('LDA_cov_aux1_cpp.cpp')
res=gibbs.LDA.cov(ncomm=ncomm,ngibbs=ngibbs,nburn=nburn,y=y,xmat=xmat,
phi.prior=phi.prior,array.lsk.init=array.lsk,
var.betas=var.betas)
plot(res$llk,type='l')
nlk=matrix(res$nlk[ngibbs,],nloc,ncomm)
theta=nlk/apply(nlk,1,sum)
boxplot(theta)
nlk.init=apply(array.lsk,c(1,3),sum)
theta.init=nlk.init/apply(nlk.init,1,sum)
boxplot(theta.init)
nlk=matrix(res$nlk[ngibbs,],nloc,ncomm)
theta=nlk/apply(nlk,1,sum)
boxplot(theta)
sqrt(0.5)
0.5^2
sqrt(0.25)
rm(list=ls(all=TRUE))
library(MCMCpack)
library('Rcpp')
library('RcppArmadillo')
set.seed(10)
#get data
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\derived data')
dat=read.csv('g10 aggregated.csv',as.is=T)
ind=which(colnames(dat)%in%c('x','y','ano'))
y=data.matrix(dat[,-ind])
nloc=nrow(y)
nspp=ncol(y)
xmat=data.matrix(read.csv('g10 aggregated xmat1.csv',as.is=T))
xmat=cbind(1,xmat) #ADD INTERCEPT
#get array.lsk
setwd('U:\\independent studies\\lda covariates\\bony_big_plot\\gibbs\\results')
tmp=read.csv('array lsk.csv',as.is=T)
ncomm=3 #this was estimated based on a previous step
array.lsk=array(tmp$V1,dim=c(nloc,nspp,ncomm))
#basic settings
ngibbs=10000
nburn=ngibbs/2
#priors
phi.prior=0.01
var.betas=c(10,rep(0.25,ncol(xmat)-1))
gamma=0.1
#----------------------------------------------------------
#LDA with covariates
#get functions
setwd('U:\\GIT_models\\git_LDA_MS')
source('LDA cov main function.R')
source('LDA cov aux functions.R')
sourceCpp('LDA_cov_aux1_cpp.cpp')
res=gibbs.LDA.cov(ncomm=ncomm,ngibbs=ngibbs,nburn=nburn,y=y,xmat=xmat,
phi.prior=phi.prior,array.lsk.init=array.lsk,
var.betas=var.betas)
plot(res$llk,type='l')
#explore results
nlk=matrix(res$nlk[ngibbs,],nloc,ncomm)
theta=nlk/apply(nlk,1,sum)
boxplot(theta)
boxplot(theta)
theta=nlk/apply(nlk,1,sum)
boxplot(theta)
nlk.init=apply(array.lsk,c(1,3),sum)
theta.init=nlk.init/apply(nlk.init,1,sum)
boxplot(theta.init)
