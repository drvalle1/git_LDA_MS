xmat1=cbind(xmat1,res)
}
#run gibbs sampler
ncomm=10
ngibbs=1000
nburnin=ngibbs/2
#basic settings
nspp=ncol(y)
nloc=nrow(y)
npar=ncol(xmat)
#useful stuff
hi=0.999999
lo=0.000001
#initial values of parameters
betas=matrix(0,npar,ncomm-1)
theta=matrix(1/ncomm,nloc,ncomm)
phi=matrix(1/nspp,ncomm,nspp)
#MH stuff
accept1=list(betas=matrix(0,npar,ncomm-1))
jump1=list(betas=matrix(1,npar,ncomm-1))
accept.output=100
#gibbs details
theta.out=matrix(NA,ngibbs,ncomm*nloc)
phi.out=matrix(NA,ngibbs,ncomm*nspp)
betas.out=matrix(NA,ngibbs,npar*(ncomm-1))
llk=rep(NA,ngibbs)
options(warn=2)
betas.old=betas.new=betas.orig=betas
media.old=xmat%*%betas.old
#propose new beta values
tmp=rnorm(npar*(ncomm-1),mean=betas.old,sd=jump)
proposed=matrix(tmp,npar,ncomm-1)
#calculate prior probabilities
prior.old=(-1/2)*(betas.old^2)
prior.new=(-1/2)*(proposed^2)
jump=jump1$betas
betas.old=betas.new=betas.orig=betas
media.old=xmat%*%betas.old
#propose new beta values
tmp=rnorm(npar*(ncomm-1),mean=betas.old,sd=jump)
proposed=matrix(tmp,npar,ncomm-1)
#calculate prior probabilities
prior.old=(-1/2)*(betas.old^2)
prior.new=(-1/2)*(proposed^2)
dim(prior.old)
i=j=1
betas.new=betas.old
media.new=media.old
betas.new[i,j]=proposed[i,j]
media.new[,j]=xmat%*%betas.new[,j]
media.new1=xmat%*%betas.new
plot(media.new,media.new1)
betas.new=proposed
betas.old=proposed
k=xmat%*%betas.new
betas.old=betas.new
betas.old
betas=betas.old
mold=xmat%*%betas.old
betas=betas.old
betas[2,4]=1
m1=xmat%*%betas
mold[,4]=xmat%*%betas[,4]
plot(mold,m1)
betas=betas.old
betas[2,9]=1
m1=xmat%*%betas
mold=xmat%*%betas.old
mold[,9]=xmat%*%betas[,9]
plot(mold,m1)
unique(mold-m1)
betas=betas.old
betas[2,2]=1
m1=xmat%*%betas
mold=xmat%*%betas.old
mold[,2]=xmat%*%betas[,2]
plot(mold,m1)
unique(mold-m1)
rm(list=ls(all=TRUE))
library('Rcpp')
library('mvtnorm')
set.seed(4)
#get functions
setwd('U:\\GIT_models\\git_LDA_MS')
source('LDA MS functions.R')
source('LDA MS gibbs sampler.R')
sourceCpp('LDA_MS_c.cpp')
#get data
dat=read.csv('fake data response curve4.csv',as.is=T)
ind=which(colnames(dat)=='X')
y=data.matrix(dat[,-ind]); dim(y)
#get covariates
xmat=data.matrix(read.csv('fake data response curve cov4.csv',as.is=T))
nomes=paste0('cov',1:4)
colnames(xmat)=c('interc',nomes)
#create linear splines for covariates 2:5
xmat1=matrix(1,nrow(xmat),1)
knots=c(-0.5,0,0.5)
for (i in 1:length(nomes)){
orig=xmat[,nomes[i]]
res=orig
for (j in 1:length(knots)){
tmp=ifelse(orig-knots[j]<0,0,orig-knots[j])
res=cbind(res,tmp)
}
colnames(res)=c(nomes[i],paste0(nomes[i],c('a','b','c')))
xmat1=cbind(xmat1,res)
}
#run gibbs sampler
ncomm=10
ngibbs=1000
nburnin=ngibbs/2
res=LDA.MS.gibbs(y=y,xmat=xmat1,ncomm=ncomm,ngibbs=ngibbs,nburnin=nburnin)
plot(res$llk,type='l',ylim=range(res$llk,na.rm=T))
nloc=nrow(y)
theta=matrix(res$theta[nrow(res$theta),],nloc,ncomm)
par(mfrow=c(1,1))
boxplot(theta)
npar=ncol(xmat1)
betas=matrix(res$betas[nrow(res$betas),],npar,ncomm-1)
seq1=seq(from=-1,to=1,length.out=nloc)
knots=seq(from=-0.5,to=0.5,by=0.5)
mat=seq1
for (i in 1:length(knots)){
tmp=ifelse(seq1-knots[i]<0,0,seq1-knots[i])
mat=cbind(mat,tmp)
}
mat.focus=mat
#create design matrix to fill in
seq1=rep(0,nloc)
knots=seq(from=-0.5,to=0.5,by=0.5)
mat=seq1
for (i in 1:length(knots)){
tmp=ifelse(seq1-knots[i]<0,0,seq1-knots[i])
mat=cbind(mat,tmp)
}
mat.fill=mat
#create true curves
par(mfrow=c(3,2))
for (i in 1:6){
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',i)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
#plot results
plot(seq1,theta[,i],type='l',main=i)
}
betas
#create design matrix of interest
seq1=seq(from=-1,to=1,length.out=nloc)
knots=seq(from=-0.5,to=0.5,by=0.5)
mat=seq1
for (i in 1:length(knots)){
tmp=ifelse(seq1-knots[i]<0,0,seq1-knots[i])
mat=cbind(mat,tmp)
}
mat.focus=mat
mat.focus
seq1=rep(0,nloc)
mat=seq1
for (i in 1:length(knots)){
tmp=ifelse(seq1-knots[i]<0,0,seq1-knots[i])
mat=cbind(mat,tmp)
}
mat.fill=mat
head(mat.fill)
par(mfrow=c(3,2))
i=1
par(mfrow=c(1,1))
boxplot(theta)
#look at convergence
plot(res$llk,type='l',ylim=range(res$llk,na.rm=T))
#look at theta
nloc=nrow(y)
theta=matrix(res$theta[nrow(res$theta),],nloc,ncomm)
par(mfrow=c(1,1))
boxplot(theta)
par(mfrow=c(2,2))
par(mfrow=c(2,2))
ind=c(1,2,3,6)
i=1
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',i)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
head(xmat2)
apply(xmat2,2,range)
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
head(theta)
seq1
plot(seq(from=-1,to=1,length.out=nloc),theta[,i],type='l',main=i)
par(mfrow=c(2,2))
ind=c(1,2,3,6)
for (i in 1:4){
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',i)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
#plot results
plot(seq(from=-1,to=1,length.out=nloc),theta[,ind[i]],type='l',main=i)
}
#look at convergence
plot(res$llk,type='l',ylim=range(res$llk,na.rm=T))
#look at theta
nloc=nrow(y)
theta=matrix(res$theta[nrow(res$theta),],nloc,ncomm)
par(mfrow=c(1,1))
boxplot(theta)
ind=c(1,2,6,9)
theta1=theta[,ind]
plot(NA,NA,ylim=c(0,1),xlim=c(0,nloc))
for (i in 1:ncol(theta1)){
lines(theta1[,i],col=i)
}
#get parameters
npar=ncol(xmat1)
betas=matrix(res$betas[nrow(res$betas),],npar,ncomm-1)
#create design matrix of interest
seq1=seq(from=-1,to=1,length.out=nloc)
knots=seq(from=-0.5,to=0.5,by=0.5)
mat=seq1
for (i in 1:length(knots)){
tmp=ifelse(seq1-knots[i]<0,0,seq1-knots[i])
mat=cbind(mat,tmp)
}
mat.focus=mat
#create design matrix to fill in
seq1=rep(0,nloc)
mat=seq1
for (i in 1:length(knots)){
tmp=ifelse(seq1-knots[i]<0,0,seq1-knots[i])
mat=cbind(mat,tmp)
}
mat.fill=mat
#create true curves
par(mfrow=c(2,2))
ind=c(1,2,3,6)
for (i in 1:4){
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',i)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
#plot results
plot(seq(from=-1,to=1,length.out=nloc),theta[,ind[i]],type='l',main=i)
}
#look at convergence
plot(res$llk,type='l',ylim=range(res$llk,na.rm=T))
#look at theta
nloc=nrow(y)
theta=matrix(res$theta[nrow(res$theta),],nloc,ncomm)
par(mfrow=c(1,1))
boxplot(theta)
par(mfrow=c(1,1))
ind=c(1,2,3,6)
cov=1
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
#plot results
plot(seq(from=-1,to=1,length.out=nloc),theta[,1],type='l',main=i)
par(mfrow=c(1,1))
ind=c(1,2,3,6)
cov=2
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
#plot results
plot(seq(from=-1,to=1,length.out=nloc),theta[,1],type='l',main=i)
par(mfrow=c(1,1))
ind=c(1,2,3,6)
cov=2
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
#plot results
plot(seq(from=-1,to=1,length.out=nloc),theta[,2],type='l',main=i)
par(mfrow=c(1,1))
ind=c(1,2,3,6)
cov=3
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
#plot results
plot(seq(from=-1,to=1,length.out=nloc),theta[,3],type='l',main=i)
plot(seq(from=-1,to=1,length.out=nloc),theta[,6],type='l',main=i)
par(mfrow=c(1,1))
ind=c(1,2,3,6)
cov=3
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
#plot results
plot(seq(from=-1,to=1,length.out=nloc),theta[,6],type='l',main=i)
par(mfrow=c(1,1))
ind=c(1,2,3,6)
cov=4
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
#plot results
plot(seq(from=-1,to=1,length.out=nloc),theta[,3],type='l',main=i)
par(mfrow=c(2,2))
ind=c(1,2,3,6)
cov=4
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
#plot results
for (i in 1:length(ind)) plot(seq(from=-1,to=1,length.out=nloc),theta[,ind[i]],type='l',main=cov)
dim(theta)
ind
par(mfrow=c(2,2))
cov=4
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
ind=c(1,2,3,6)
#plot results
for (i in 1:length(ind)) plot(seq(from=-1,to=1,length.out=nloc),theta[,ind[i]],type='l',main=cov)
par(mfrow=c(2,2))
cov=1
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
ind=c(1,2,3,6)
#plot results
for (i in 1:length(ind)) plot(seq(from=-1,to=1,length.out=nloc),theta[,ind[i]],type='l',main=cov)
par(mfrow=c(2,2))
cov=2
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
ind=c(1,2,3,6)
#plot results
for (i in 1:length(ind)) plot(seq(from=-1,to=1,length.out=nloc),theta[,ind[i]],type='l',main=cov)
par(mfrow=c(2,2))
cov=3
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
ind=c(1,2,3,6)
#plot results
for (i in 1:length(ind)) plot(seq(from=-1,to=1,length.out=nloc),theta[,ind[i]],type='l',main=cov)
par(mfrow=c(2,2))
cov=4
#get design matrix
xmat2=xmat1
xmat2[,-1]=cbind(mat.fill,mat.fill,mat.fill,mat.fill)
nome=paste0('cov',cov)
ind=grep(nome,colnames(xmat2))
xmat2[,ind]=mat.focus
#calculate theta
media=xmat2%*%betas
prob=1/(1+exp(-media))
vmat=cbind(prob,1)
theta=convertVtoTheta(vmat,rep(1,nloc))
ind=c(1,2,3,6)
#plot results
for (i in 1:length(ind)) plot(seq(from=-1,to=1,length.out=nloc),theta[,ind[i]],type='l',main=cov)
library('Rcpp')
set.seed(4)
nloc=1000
nspp=100
ncommun=4
#generate covariates
xmat=cbind(1,
runif(nloc,min=-1,max=1),
runif(nloc,min=-1,max=1),
runif(nloc,min=-1,max=1),
runif(nloc,min=-1,max=1))
#generate betas
betas=matrix(NA,ncol(xmat),ncommun)
betas[,1]=c(-1,1,0,0,0)*3
betas[,2]=c(-1,0,1,0,0)*3
betas[,3]=c(-1,0,0,1,0)*3
betas[,4]=c(-1,0,0,0,1)*3
betas.true=betas
#generate thetas
tmp=exp(xmat%*%betas)
soma=matrix(apply(tmp,1,sum),nloc,ncommun)
theta=tmp/soma
par(mfrow=c(1,1))
boxplot(theta)
#look at raw response curves
par(mfrow=c(2,2))
for (i in 1:ncommun){
plot(xmat[,i+1],theta[,i],main=i)
}
#look at true response curves
par(mfrow=c(2,2),mar=c(3,3,1,1))
for (i in 1:ncommun){
xmat1=xmat
xmat1[,2:5]=0
xmat1[,i+1]=seq(from=-1,to=1,length.out=nloc)
tmp=exp(xmat1%*%betas)
soma=matrix(apply(tmp,1,sum),nloc,ncommun)
theta.hyp=tmp/soma
for (j in 1:4) plot(xmat1[,i+1],theta.hyp[,j],type='l',main=i)
}
